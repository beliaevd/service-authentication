<?php

namespace fixsickcoder\ServiceAuthentication\Controller;

use fixsickcoder\JsonRpc\Controller;
use fixsickcoder\ServiceAuthentication\DTO\UserLogin;
use fixsickcoder\ServiceAuthentication\Interface\UserInterface;
use fixsickcoder\ServiceAuthentication\Service\UserService;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Request;

class UserController extends Controller
{

    /**
     * Конструктор
     *
     * @param UserService $service
     */
    public function __construct(
        private readonly UserInterface $service
    )
    {
    }

    /**
     * End-point для контроллера
     *
     * @param Request $request
     * @return JsonResponse
     */
    public function index(Request $request): JsonResponse
    {
        return parent::index($request); // TODO: Change the autogenerated stub
    }

    /**
     * Аутентифкация пользователя
     *
     * @param UserLogin $params Параметры для аутентификации пользователя
     * @return array
     */
    public function login(UserLogin $params): array
    {
        return $this->service->login($params->toArray());
    }

    /**
     * Получение данных пользователя для пользователя
     *
     * @param string $id
     * @return array
     */
    public function info(string $id): array
    {
        return $this->service->info($id);
    }


    /**
     * Добовление пользователя
     *
     * @return array
     */
    public function add(): array
    {
        return  $this->service->add([]);
    }

    /**
     * Удаление пользователя
     *
     * @param string $id Идентфиикатор записи пользователя
     *
     * @return array
     */
    public function remove(string $id): array
    {
        return $this->service->remove($id);
    }

    /**
     * Обновление данных пользователя
     *
     * @return array
     */
    public function update(): array
    {
        return  $this->service->edit([]);
    }

    /**
     * Получение данных пользователя для администратора
     *
     * @param string $id Идентификатор записи пользователя
     *
     * @return array
     */
    public function get(string $id): array
    {
        return $this->service->get($id);
    }
}